name: RISC-V Assembler Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y cmake build-essential

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal
        components: rustfmt, clippy

    - name: Create library directory
      run: mkdir -p assembler-cpp/lib

    - name: Build Rust components
      run: |
        # First build the core isa library
        echo "Building core isa library..."
        cd isa
        cargo build --release --verbose
        cd ..
        
        # Then build the FFI library
        echo "Building FFI library..."
        cd isa-ffi
        cargo build --release --verbose
        
        # Copy the static library
        echo "Copying FFI library..."
        echo "Workspace root contents:"
        ls -la /home/runner/work/riscv-emu-ass/riscv-emu-ass/
        echo "Target release contents:"
        ls -la /home/runner/work/riscv-emu-ass/riscv-emu-ass/target/release/
        
        # Try to find the library file
        echo "Looking for FFI library files:"
        find /home/runner/work/riscv-emu-ass/riscv-emu-ass -name "libisa_ffi*"
        
        # Copy all variations of the library file
        cp /home/runner/work/riscv-emu-ass/riscv-emu-ass/target/release/libisa_ffi* /home/runner/work/riscv-emu-ass/riscv-emu-ass/assembler-cpp/lib/ || true
        
        # Check what was copied
        echo "Copied library contents:"
        ls -la ../assembler-cpp/lib/
        
        # Set permissions
        chmod 644 ../assembler-cpp/lib/* || true

    - name: Build and test C++ components
      run: |
        cd assembler-cpp
        # Build in build directory
        mkdir -p build
        cd build
        echo "Build directory contents before cmake:"
        ls -la ../lib/
        cmake .. -DRUST_FFI_PATH=/home/runner/work/riscv-emu-ass/riscv-emu-ass/assembler-cpp/lib
        make VERBOSE=1 -j$(nproc)
        cd ..
        chmod +x tests/run_tests.sh
        ./tests/run_tests.sh

    - name: Upload test artifacts on failure
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: test-outputs
        path: assembler-cpp/build/test_output/
        retention-days: 5  # Keep artifacts for 5 days